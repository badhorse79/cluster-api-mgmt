apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: talos-cluster
  namespace: talos-cluster
  labels:
    argoCDChart: enabled
    clusterapps: enabled
    hccm: enabled
    cilium: enabled
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.244.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: TalosControlPlane
    name: talos-cluster-controlplane
    namespace: talos-cluster
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: HetznerCluster
    name: talos-cluster
    namespace: talos-cluster
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: HetznerCluster
metadata:
  name: talos-cluster
  namespace: talos-cluster
spec:
  controlPlaneEndpoint:
    host: ""
    port: 6443
  controlPlaneLoadBalancer:
    enabled: true
    region: fsn1
    type: lb11
  controlPlaneRegions:
  - fsn1
  hcloudNetwork:
    enabled: true
    networkZone: eu-central
  hcloudPlacementGroups:
  - name: talos-cluster-controlplane
    type: spread
  - name: talos-cluster-worker
    type: spread
  hetznerSecretRef:
    key:
      hcloudToken: hcloud
    name: hetzner
  sshKeys:
    hcloud:
    - name: thl-ssh-key
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: HCloudMachineTemplate
metadata:
  name: talos-cluster-controlplane
  namespace: talos-cluster
spec:
  template:
    spec:
      imageName: talos-image
      placementGroupName: talos-cluster-controlplane
      type: cx22
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: HCloudMachineTemplate
metadata:
  name: talos-cluster-worker
  namespace: talos-cluster
spec:
  template:
    spec:
      imageName: talos-image
      placementGroupName: talos-cluster-worker
      type: cx22
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: TalosControlPlane
metadata:
  name: talos-cluster-controlplane
  namespace: talos-cluster
spec:
  controlPlaneConfig:
    controlplane:
      generateType: controlplane
      strategicPatches:
      - |
        cluster:
          externalCloudProvider:
            enabled: true
      - |
        cluster:
          network:
            cni: null
      - |
        cluster:
          proxy:
            disabled: true
      talosVersion: v1.11
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: HCloudMachineTemplate
    name: talos-cluster-controlplane
    namespace: talos-cluster
  replicas: 1
  version: v1.31.8
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: talos-cluster-worker-pool
  namespace: talos-cluster
spec:
  clusterName: talos-cluster
  replicas: 2
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: TalosConfigTemplate
          name: talos-cluster-worker
      clusterName: talos-cluster
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: HCloudMachineTemplate
        name: talos-cluster-worker
        namespace: talos-cluster
      version: v1.31.8
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: TalosConfigTemplate
metadata:
  name: talos-cluster-worker
  namespace: talos-cluster
spec:
  template:
    spec:
      generateType: worker
      strategicPatches:
      - |
        cluster:
          externalCloudProvider:
            enabled: true
      - |
        cluster:
          network:
            cni: none
      - |
        cluster:
          proxy:
            disabled: true
      talosVersion: v1.11
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: cillium
spec:
  clusterSelector:
    matchLabels:
      cilium: enabled
  repoURL: https://helm.cilium.io
  chartName: cilium
  namespace: kube-system
  valuesTemplate: |
    ipam:
      mode: kubernetes
    kubeProxyReplacement: true
    securityContext:
      capabilities:
        ciliumAgent: ["CHOWN","KILL","NET_ADMIN","NET_RAW","IPC_LOCK","SYS_ADMIN","SYS_RESOURCE","DAC_OVERRIDE","FOWNER","SETGID","SETUID"]
        cleanCiliumState: ["NET_ADMIN","SYS_ADMIN","SYS_RESOURCE"]
    cgroup:
      autoMount:
        enabled: false
      hostRoot: "/sys/fs/cgroup"
    k8sServiceHost: "localhost"
    k8sServicePort: 7443
  options:
    waitForJobs: true
    wait: true
    timeout: 5m
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: hcloud-cloud-controller-manager
spec:
  clusterSelector:
    matchLabels:
      hccm: enabled
  repoURL: https://charts.hetzner.cloud
  chartName: hcloud-cloud-controller-manager
  namespace: kube-system
  valuesTemplate: |
    env:
      HCLOUD_NETWORK:
        valueFrom:
          secretKeyRef:
            name: hetzner
            key: network
      HCLOUD_TOKEN:
        valueFrom:
          secretKeyRef:
            name: hetzner
            key: hcloud
  options:
    waitForJobs: true
    wait: true
    timeout: 5m
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: argocd
spec:
  clusterSelector:
    matchLabels:
      argoCDChart: enabled
  repoURL: https://argoproj.github.io/argo-helm
  chartName: argo-cd
  namespace: argocd
  options:
    waitForJobs: true
    wait: true
    timeout: 5m
    install:
      createNamespace: true
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: clusterapps
spec:
  clusterSelector:
    matchLabels:
      clusterapps: enabled
  repoURL: https://argoproj.github.io/argo-helm
  chartName: argocd-apps
  valuesTemplate: |
    applications:
      clusterapps:
        namespace: argocd
        finalizers:
        - resources-finalizer.argocd.argoproj.io
        project: default
        sources:
          - repoURL: https://github.com/badhorse79/cluster-api-mgmt.git
            path: cluster-applications
            targetRevision: HEAD
        destination:
          server: https://kubernetes.default.svc
          namespace: cluster-apps
        syncPolicy:
          automated:
            prune: true
            selfHeal: false
          syncOptions:
            - CreateNamespace=true
  options:
    waitForJobs: true
    wait: true
    timeout: 5m
    install:
      createNamespace: true
